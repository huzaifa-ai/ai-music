// Generated by view binder compiler. Do not edit!
package com.holisticapp.fitness.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.holisticapp.fitness.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardMoodMusicBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton getPlaylistButton;

  @NonNull
  public final Spinner moodSpinner;

  @NonNull
  public final TextView musicCardTitle;

  @NonNull
  public final RecyclerView musicRecyclerView;

  @NonNull
  public final TextView selectMoodLabel;

  private CardMoodMusicBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton getPlaylistButton, @NonNull Spinner moodSpinner,
      @NonNull TextView musicCardTitle, @NonNull RecyclerView musicRecyclerView,
      @NonNull TextView selectMoodLabel) {
    this.rootView = rootView;
    this.getPlaylistButton = getPlaylistButton;
    this.moodSpinner = moodSpinner;
    this.musicCardTitle = musicCardTitle;
    this.musicRecyclerView = musicRecyclerView;
    this.selectMoodLabel = selectMoodLabel;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardMoodMusicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardMoodMusicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_mood_music, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardMoodMusicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.getPlaylistButton;
      MaterialButton getPlaylistButton = ViewBindings.findChildViewById(rootView, id);
      if (getPlaylistButton == null) {
        break missingId;
      }

      id = R.id.moodSpinner;
      Spinner moodSpinner = ViewBindings.findChildViewById(rootView, id);
      if (moodSpinner == null) {
        break missingId;
      }

      id = R.id.musicCardTitle;
      TextView musicCardTitle = ViewBindings.findChildViewById(rootView, id);
      if (musicCardTitle == null) {
        break missingId;
      }

      id = R.id.musicRecyclerView;
      RecyclerView musicRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (musicRecyclerView == null) {
        break missingId;
      }

      id = R.id.selectMoodLabel;
      TextView selectMoodLabel = ViewBindings.findChildViewById(rootView, id);
      if (selectMoodLabel == null) {
        break missingId;
      }

      return new CardMoodMusicBinding((MaterialCardView) rootView, getPlaylistButton, moodSpinner,
          musicCardTitle, musicRecyclerView, selectMoodLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
