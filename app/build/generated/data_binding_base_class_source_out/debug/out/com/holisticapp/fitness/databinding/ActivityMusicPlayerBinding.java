// Generated by view binder compiler. Do not edit!
package com.holisticapp.fitness.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.holisticapp.fitness.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMusicPlayerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView albumArt;

  @NonNull
  public final CardView angryMoodCard;

  @NonNull
  public final TextView artistText;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final CardView calmMoodCard;

  @NonNull
  public final TextView currentTimeText;

  @NonNull
  public final CardView happyMoodCard;

  @NonNull
  public final ImageButton nextButton;

  @NonNull
  public final ImageButton playPauseButton;

  @NonNull
  public final RecyclerView playlistRecyclerView;

  @NonNull
  public final ImageButton previousButton;

  @NonNull
  public final ImageButton repeatButton;

  @NonNull
  public final CardView sadMoodCard;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final ImageButton shuffleButton;

  @NonNull
  public final TextView songTitleText;

  @NonNull
  public final TextView totalTimeText;

  private ActivityMusicPlayerBinding(@NonNull LinearLayout rootView, @NonNull ImageView albumArt,
      @NonNull CardView angryMoodCard, @NonNull TextView artistText,
      @NonNull ImageButton backButton, @NonNull CardView calmMoodCard,
      @NonNull TextView currentTimeText, @NonNull CardView happyMoodCard,
      @NonNull ImageButton nextButton, @NonNull ImageButton playPauseButton,
      @NonNull RecyclerView playlistRecyclerView, @NonNull ImageButton previousButton,
      @NonNull ImageButton repeatButton, @NonNull CardView sadMoodCard, @NonNull SeekBar seekBar,
      @NonNull ImageButton shuffleButton, @NonNull TextView songTitleText,
      @NonNull TextView totalTimeText) {
    this.rootView = rootView;
    this.albumArt = albumArt;
    this.angryMoodCard = angryMoodCard;
    this.artistText = artistText;
    this.backButton = backButton;
    this.calmMoodCard = calmMoodCard;
    this.currentTimeText = currentTimeText;
    this.happyMoodCard = happyMoodCard;
    this.nextButton = nextButton;
    this.playPauseButton = playPauseButton;
    this.playlistRecyclerView = playlistRecyclerView;
    this.previousButton = previousButton;
    this.repeatButton = repeatButton;
    this.sadMoodCard = sadMoodCard;
    this.seekBar = seekBar;
    this.shuffleButton = shuffleButton;
    this.songTitleText = songTitleText;
    this.totalTimeText = totalTimeText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMusicPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMusicPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_music_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMusicPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.albumArt;
      ImageView albumArt = ViewBindings.findChildViewById(rootView, id);
      if (albumArt == null) {
        break missingId;
      }

      id = R.id.angryMoodCard;
      CardView angryMoodCard = ViewBindings.findChildViewById(rootView, id);
      if (angryMoodCard == null) {
        break missingId;
      }

      id = R.id.artistText;
      TextView artistText = ViewBindings.findChildViewById(rootView, id);
      if (artistText == null) {
        break missingId;
      }

      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.calmMoodCard;
      CardView calmMoodCard = ViewBindings.findChildViewById(rootView, id);
      if (calmMoodCard == null) {
        break missingId;
      }

      id = R.id.currentTimeText;
      TextView currentTimeText = ViewBindings.findChildViewById(rootView, id);
      if (currentTimeText == null) {
        break missingId;
      }

      id = R.id.happyMoodCard;
      CardView happyMoodCard = ViewBindings.findChildViewById(rootView, id);
      if (happyMoodCard == null) {
        break missingId;
      }

      id = R.id.nextButton;
      ImageButton nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.playPauseButton;
      ImageButton playPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (playPauseButton == null) {
        break missingId;
      }

      id = R.id.playlistRecyclerView;
      RecyclerView playlistRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (playlistRecyclerView == null) {
        break missingId;
      }

      id = R.id.previousButton;
      ImageButton previousButton = ViewBindings.findChildViewById(rootView, id);
      if (previousButton == null) {
        break missingId;
      }

      id = R.id.repeatButton;
      ImageButton repeatButton = ViewBindings.findChildViewById(rootView, id);
      if (repeatButton == null) {
        break missingId;
      }

      id = R.id.sadMoodCard;
      CardView sadMoodCard = ViewBindings.findChildViewById(rootView, id);
      if (sadMoodCard == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.shuffleButton;
      ImageButton shuffleButton = ViewBindings.findChildViewById(rootView, id);
      if (shuffleButton == null) {
        break missingId;
      }

      id = R.id.songTitleText;
      TextView songTitleText = ViewBindings.findChildViewById(rootView, id);
      if (songTitleText == null) {
        break missingId;
      }

      id = R.id.totalTimeText;
      TextView totalTimeText = ViewBindings.findChildViewById(rootView, id);
      if (totalTimeText == null) {
        break missingId;
      }

      return new ActivityMusicPlayerBinding((LinearLayout) rootView, albumArt, angryMoodCard,
          artistText, backButton, calmMoodCard, currentTimeText, happyMoodCard, nextButton,
          playPauseButton, playlistRecyclerView, previousButton, repeatButton, sadMoodCard, seekBar,
          shuffleButton, songTitleText, totalTimeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
