// Generated by view binder compiler. Do not edit!
package com.holisticapp.fitness.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.holisticapp.fitness.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardWorkoutRecommendationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextInputEditText ageInput;

  @NonNull
  public final TextInputLayout ageInputLayout;

  @NonNull
  public final TextInputEditText bodyFatInput;

  @NonNull
  public final TextInputLayout bodyFatInputLayout;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialButton getRecommendationButton;

  @NonNull
  public final TextView moodLabel;

  @NonNull
  public final Spinner moodSpinner;

  @NonNull
  public final MaterialButton skipButton;

  @NonNull
  public final MaterialButton startWorkoutButton;

  @NonNull
  public final TextView workoutCardTitle;

  @NonNull
  public final TextView workoutDescription;

  @NonNull
  public final TextView workoutDuration;

  @NonNull
  public final TextView workoutDurationLabel;

  @NonNull
  public final TextView workoutTitle;

  private CardWorkoutRecommendationBinding(@NonNull MaterialCardView rootView,
      @NonNull TextInputEditText ageInput, @NonNull TextInputLayout ageInputLayout,
      @NonNull TextInputEditText bodyFatInput, @NonNull TextInputLayout bodyFatInputLayout,
      @NonNull View divider, @NonNull MaterialButton getRecommendationButton,
      @NonNull TextView moodLabel, @NonNull Spinner moodSpinner, @NonNull MaterialButton skipButton,
      @NonNull MaterialButton startWorkoutButton, @NonNull TextView workoutCardTitle,
      @NonNull TextView workoutDescription, @NonNull TextView workoutDuration,
      @NonNull TextView workoutDurationLabel, @NonNull TextView workoutTitle) {
    this.rootView = rootView;
    this.ageInput = ageInput;
    this.ageInputLayout = ageInputLayout;
    this.bodyFatInput = bodyFatInput;
    this.bodyFatInputLayout = bodyFatInputLayout;
    this.divider = divider;
    this.getRecommendationButton = getRecommendationButton;
    this.moodLabel = moodLabel;
    this.moodSpinner = moodSpinner;
    this.skipButton = skipButton;
    this.startWorkoutButton = startWorkoutButton;
    this.workoutCardTitle = workoutCardTitle;
    this.workoutDescription = workoutDescription;
    this.workoutDuration = workoutDuration;
    this.workoutDurationLabel = workoutDurationLabel;
    this.workoutTitle = workoutTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardWorkoutRecommendationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardWorkoutRecommendationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_workout_recommendation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardWorkoutRecommendationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ageInput;
      TextInputEditText ageInput = ViewBindings.findChildViewById(rootView, id);
      if (ageInput == null) {
        break missingId;
      }

      id = R.id.ageInputLayout;
      TextInputLayout ageInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (ageInputLayout == null) {
        break missingId;
      }

      id = R.id.bodyFatInput;
      TextInputEditText bodyFatInput = ViewBindings.findChildViewById(rootView, id);
      if (bodyFatInput == null) {
        break missingId;
      }

      id = R.id.bodyFatInputLayout;
      TextInputLayout bodyFatInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (bodyFatInputLayout == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.getRecommendationButton;
      MaterialButton getRecommendationButton = ViewBindings.findChildViewById(rootView, id);
      if (getRecommendationButton == null) {
        break missingId;
      }

      id = R.id.moodLabel;
      TextView moodLabel = ViewBindings.findChildViewById(rootView, id);
      if (moodLabel == null) {
        break missingId;
      }

      id = R.id.moodSpinner;
      Spinner moodSpinner = ViewBindings.findChildViewById(rootView, id);
      if (moodSpinner == null) {
        break missingId;
      }

      id = R.id.skipButton;
      MaterialButton skipButton = ViewBindings.findChildViewById(rootView, id);
      if (skipButton == null) {
        break missingId;
      }

      id = R.id.startWorkoutButton;
      MaterialButton startWorkoutButton = ViewBindings.findChildViewById(rootView, id);
      if (startWorkoutButton == null) {
        break missingId;
      }

      id = R.id.workoutCardTitle;
      TextView workoutCardTitle = ViewBindings.findChildViewById(rootView, id);
      if (workoutCardTitle == null) {
        break missingId;
      }

      id = R.id.workoutDescription;
      TextView workoutDescription = ViewBindings.findChildViewById(rootView, id);
      if (workoutDescription == null) {
        break missingId;
      }

      id = R.id.workoutDuration;
      TextView workoutDuration = ViewBindings.findChildViewById(rootView, id);
      if (workoutDuration == null) {
        break missingId;
      }

      id = R.id.workoutDurationLabel;
      TextView workoutDurationLabel = ViewBindings.findChildViewById(rootView, id);
      if (workoutDurationLabel == null) {
        break missingId;
      }

      id = R.id.workoutTitle;
      TextView workoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (workoutTitle == null) {
        break missingId;
      }

      return new CardWorkoutRecommendationBinding((MaterialCardView) rootView, ageInput,
          ageInputLayout, bodyFatInput, bodyFatInputLayout, divider, getRecommendationButton,
          moodLabel, moodSpinner, skipButton, startWorkoutButton, workoutCardTitle,
          workoutDescription, workoutDuration, workoutDurationLabel, workoutTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
